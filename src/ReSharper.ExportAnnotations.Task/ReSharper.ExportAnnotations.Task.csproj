<Project Sdk="Microsoft.Build.NoTargets/2.0.1">

  <PropertyGroup>

    <!-- The project system needs this. We don't. -->
    <TargetFramework>netstandard1.3</TargetFramework>

    <!-- Remove the <dependencies> tag from .nupkg, because it makes the package "depend" on our TargetPlatform. -->
    <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>

    <!-- Package metadata -->
    <IsPackable>true</IsPackable>
    <IncludeSymbols>false</IncludeSymbols>
    <Description>The ultimate, one-stop solution to distribute ReSharper code annotations in XML format along with your libraries.</Description>
    <PackageTags>build msbuild jetbrains resharper annotations</PackageTags>
    <DevelopmentDependency>true</DevelopmentDependency>
    <Serviceable>true</Serviceable>

    <!-- Prevent the SDK from adding an actual ProjectReference item for ExportAnnotations.
         The dependency on ExportAnnotations is set in the solution file.
         The project system won't let you ProjectReference a multi-targeting project.
         See https://github.com/dotnet/msbuild/issues/4303 -->
    <AddSyntheticProjectReferencesForSolutionDependencies>false</AddSyntheticProjectReferencesForSolutionDependencies>

  </PropertyGroup>

  <!-- Package content, minus the 'tools' folder -->
  <ItemGroup>
    <Content Include="build\**\*" PackagePath="%(Identity)" />
    <Content Include="buildMultiTargeting\**\*" PackagePath="%(Identity)" />
  </ItemGroup>

  <!-- Collect the tool's published output for relevant target frameworks
       and include it in the package's 'tools' folder -->
  <Target Name="__PublishTool" BeforeTargets="CoreBuild">

    <PropertyGroup>
      <__ToolProject>..\ExportAnnotations\ExportAnnotations.csproj</__ToolProject>
      <__ToolPublishPath>$(MSBuildThisFileDirectory)obj\$(Configuration)\tools\</__ToolPublishPath>
    </PropertyGroup>

    <ItemGroup>
      <__ToolTargetFramework Include="net471" />
      <__ToolTargetFramework Include="netcoreapp2.1" />
    </ItemGroup>

    <!-- Publish the tool's project for each target framework. -->
    <MSBuild Projects="$(__ToolProject)" Targets="Publish" Properties="Configuration=$(Configuration);PublishDir=$(__ToolPublishPath)%(__ToolTargetFramework.Identity);PublishProtocol=FileSystem;TargetFramework=%(__ToolTargetFramework.Identity);SelfContained=false" />

    <ItemGroup>
      <!-- Include published output as content, setting appropriate package paths. -->
      <Content Include="$(__ToolPublishPath)%(__ToolTargetFramework.Identity)\*" PackagePath="tools\%(__ToolTargetFramework.Identity)\" Visible="false" />
      <!-- Don't include .pdb files in non-debug configurations (i.e. Release). -->
      <Content Remove="$(__ToolPublishPath)%(__ToolTargetFramework.Identity)\*.pdb" Condition="'$(Configuration)' != 'Debug'" />
    </ItemGroup>

  </Target>

</Project>