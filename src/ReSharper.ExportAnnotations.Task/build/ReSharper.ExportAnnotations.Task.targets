<Project InitialTargets="_TenacomExportAnnotations_CheckSupport">

  <PropertyGroup>
    <MSBuildAllProjects Condition="'$(MSBuildToolsVersion)' != 'Current'">$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <!-- Build command line according to which kind of runtime MSBuild is running in -->
  <PropertyGroup>

    <_ExportAnnotationsToolsDirectory>$([System.IO.Path]::GetFullPath($(MSBuildThisFileDirectory)..\tools))\</_ExportAnnotationsToolsDirectory>

    <_ExportAnnotationsCommand Condition="'$(MSBuildRuntimeType)' == 'Core'">dotnet </_ExportAnnotationsCommand>
    <_ExportAnnotationsCommand Condition="'$(MSBuildRuntimeType)' == 'Full'" />
    <_ExportAnnotationsCommand Condition="'$(MSBuildRuntimeType)' == 'Mono'">mono </_ExportAnnotationsCommand>

    <_ExportAnnotationsExe Condition="'$(MSBuildRuntimeType)' == 'Core'">$(_ExportAnnotationsToolsDirectory)netcoreapp2.1\ExportAnnotations.dll</_ExportAnnotationsExe>
    <_ExportAnnotationsExe Condition="'$(MSBuildRuntimeType)' == 'Full'">$(_ExportAnnotationsToolsDirectory)net471\ExportAnnotations.exe</_ExportAnnotationsExe>
    <_ExportAnnotationsExe Condition="'$(MSBuildRuntimeType)' == 'Mono'">$(_ExportAnnotationsToolsDirectory)net471\ExportAnnotations.exe</_ExportAnnotationsExe>

    <_ExportAnnotationsCommand>$(_ExportAnnotationsCommand)$(_ExportAnnotationsExe)</_ExportAnnotationsCommand>

  </PropertyGroup>

  <!-- Issue errors on unsupported project type / MSBuild runtime type -->
  <Target Name="_TenacomExportAnnotations_CheckSupport">
    <Error Condition="'$(MSBuildProjectExtension)' != '.csproj' And '$(MSBuildProjectExtension)' != '.vbproj'" Text="ReSharper.ExportAnnotations.Task: unsupported project type '$(MSBuildProjectExtension)' (only .csproj and .vbproj are supported)" />
    <Error Condition="'$(_ExportAnnotationsCommand)' == ''" Text="ReSharper.ExportAnnotations.Task: unsupported MSBuild runtime type '$(MSBuildRuntimeType)' (only Core, Full, and Mono are supported)" />
  </Target>

  <!-- Normalize properties related to tool settings -->
  <PropertyGroup Condition="'$(ExportJetBrainsAnnotations)' == ''">
    <ExportJetBrainsAnnotations Condition="'$(OutputType)' != 'Library'">false</ExportJetBrainsAnnotations>
    <ExportJetBrainsAnnotations Condition="'$(OutputType)' == 'Library'">true</ExportJetBrainsAnnotations>
  </PropertyGroup>
  <PropertyGroup>
    <StripJetBrainsAnnotations Condition="'$(StripJetBrainsAnnotations)' == ''">true</StripJetBrainsAnnotations>
  </PropertyGroup>

  <!-- Define the appropriate constant to embed annotations into compiled assembly -->
  <PropertyGroup>
    <DefineConstants Condition="'$(DefineConstants)' != ''">$(DefineConstants);</DefineConstants>
    <DefineConstants>$(DefineConstants)JETBRAINS_ANNOTATIONS</DefineConstants>
  </PropertyGroup>

  <!-- Run tool immediately after compiler -->
  <Target Name="_TenacomExportAnnotations_ExportAnnotations"
          Condition="$(ExportJetBrainsAnnotations) And ('$(SkipCompilerExecution)' != 'true')"
          AfterTargets="CoreCompile">

    <PropertyGroup>
      <_ExportAnnotationsLibraryList>$(IntermediateOutputPath)ExportAnnotations.libraries</_ExportAnnotationsLibraryList>
    </PropertyGroup>

    <WriteLinesToFile
      File="$(_ExportAnnotationsLibraryList)"
      Lines="@(ReferencePathWithRefAssemblies)"
      Overwrite="true" />

    <!-- Complete command line with options -->
    <PropertyGroup>
      <_ExportAnnotationsCommandLine>$(_ExportAnnotationsCommand) &quot;%(IntermediateAssembly.FullPath)&quot;</_ExportAnnotationsCommandLine>
      <_ExportAnnotationsCommandLine Condition="$(StripJetBrainsAnnotations)">$(_ExportAnnotationsCommandLine) --strip</_ExportAnnotationsCommandLine>
      <_ExportAnnotationsCommandLine>$(_ExportAnnotationsCommandLine) --liblist &quot;$(_ExportAnnotationsLibraryList)&quot;</_ExportAnnotationsCommandLine>
    </PropertyGroup>

    <!-- Run for every IntermediateAssembly (item fed to Roslyn compilers as output assembly) -->
    <Exec Command="$(_ExportAnnotationsCommandLine)" />

  </Target>

  <!-- Hook into CopyFilesToOutputDirectory -->
  <Target Name="_TenacomExportAnnotations_CopyFilesToOutputDirectory"
          Condition="$(ExportJetBrainsAnnotations)"
          AfterTargets="CopyFilesToOutputDirectory">

    <Copy SourceFiles="@(IntermediateAssembly->'%(RootDir)%(Directory)%(Filename).ExternalAnnotations.xml')"
          DestinationFolder="$(OutDir)"
          SkipUnchangedFiles="$(SkipCopyUnchangedFiles)"
          OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
          Retries="$(CopyRetryCount)"
          RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
          UseHardlinksIfPossible="$(CreateHardLinksForCopyFilesToOutputDirectoryIfPossible)"
          UseSymboliclinksIfPossible="$(CreateSymbolicLinksForCopyFilesToOutputDirectoryIfPossible)"
          Condition="'$(CopyBuildOutputToOutputDirectory)' == 'true' and '$(SkipCopyBuildProduct)' != 'true'">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>

  </Target>

  <!-- Hook into package creation to add external annotations file to package -->
  <PropertyGroup Condition="$(ExportJetBrainsAnnotations)">
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);_TenacomExportAnnotations_IncludeExternalAnnotationsInPackage</TargetsForTfmSpecificContentInPackage>
  </PropertyGroup>
  
  <!-- Add external annotations file to package -->
  <Target Name="_TenacomExportAnnotations_IncludeExternalAnnotationsInPackage"
          Condition="$(ExportJetBrainsAnnotations)">
    <ItemGroup>
      <TfmSpecificPackageFile Include="$(OutputPath)\$(AssemblyName).ExternalAnnotations.xml" PackagePath="lib/$(TargetFramework)" />
    </ItemGroup>
  </Target>

</Project>